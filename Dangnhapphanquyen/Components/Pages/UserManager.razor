@page "/usermanager"
@attribute [StreamRendering]
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize(Roles = "Admin")]
<PageTitle>User Manager</PageTitle>

<!-- Add user form -->
<h3>Add User</h3>
<form @onsubmit="AddUser">
    <label for="username">Username:</label>
    <input type="text" id="username" @bind="newUser.Username" />
    <label for="role">Role:</label>
    <select id="role" @bind="newUser.Role">
        <option value="Admin">Admin</option>
        <option value="Employee">Employee</option>
        <option value="User">User</option>
    </select>
    <button type="submit">Add</button>
</form>

<!-- List of users -->
<h3>Users</h3>
<table class="table">
    <thead>
        <tr>
            <th>Username</th>
            <th>Role</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.Username</td>
                <td>@user.Role</td>
                <td><button @onclick="() => DeleteUser(user)">Delete</button><br /><button @onclick="() => DeleteUser(user)">Edit</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<User> users = new List<User>
    {
        new User { Username = "admin", Role = "Admin" },
        new User { Username = "employee", Role = "Employee" },
        new User { Username = "user", Role = "User" }
    };

    private User newUser = new User();

    private void AddUser()
    {
        // Add validation logic if needed
        users.Add(newUser);
        newUser = new User(); // Clear the form
    }

    private void DeleteUser(User user)
    {
        users.Remove(user);
    }

    private class User
    {
        public string Username { get; set; }
        public string Role { get; set; }
    }
}
